{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/max22/WebstormProjects/Wr_git/src/app/api/weather/current/%5BcityId%5D/route.ts"],"sourcesContent":["import { type NextRequest, NextResponse } from 'next/server';\r\nimport type { WeatherData } from '@/types';\r\n\r\nexport const dynamic = 'force-dynamic'; // ✅ разрешает использовать асинхронные параметры\r\n\r\nconst API_KEY = process.env.OPENWEATHER_API_KEY || 'c4b2992878138ac1210bc925ac188097';\r\n\r\nexport async function GET(request: NextRequest, context: { params: { cityId: string } }) {\r\n  const params = await context.params;\r\n  const { cityId } = await context.params;\r\n\r\n\r\n\r\n\r\n  try {\r\n    const weatherResponse = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?id=${cityId}&appid=${API_KEY}&units=metric&lang=ru`\r\n    );\r\n\r\n    if (!weatherResponse.ok) {\r\n      throw new Error(`OpenWeatherMap API вернул статус: ${weatherResponse.status}`);\r\n    }\r\n\r\n    const openWeatherData = await weatherResponse.json();\r\n\r\n    const weatherData: WeatherData = {\r\n      temperature: {\r\n        air: {\r\n          C: Math.round(openWeatherData.main.temp),\r\n          F: Math.round((openWeatherData.main.temp * 9) / 5 + 32),\r\n        },\r\n        comfort: {\r\n          C: Math.round(openWeatherData.main.feels_like),\r\n          F: Math.round((openWeatherData.main.feels_like * 9) / 5 + 32),\r\n        },\r\n      },\r\n      humidity: openWeatherData.main.humidity,\r\n      precipitation: {\r\n        type: getPrecipitationType(openWeatherData.weather[0].id),\r\n        intensity: getPrecipitationIntensity(openWeatherData.weather[0].id),\r\n      },\r\n      wind: {\r\n        speed: openWeatherData.wind.speed,\r\n        direction: getWindDirection(openWeatherData.wind.deg),\r\n      },\r\n      pressure: {\r\n        mm: Math.round(openWeatherData.main.pressure * 0.750062),\r\n        hpa: openWeatherData.main.pressure,\r\n      },\r\n      uv_index: 3,\r\n      phenomena: {\r\n        fog: openWeatherData.weather[0].id >= 700 && openWeatherData.weather[0].id < 800,\r\n        thunder: openWeatherData.weather[0].id >= 200 && openWeatherData.weather[0].id < 300,\r\n        cloudy: getCloudiness(openWeatherData.clouds.all),\r\n      },\r\n      description: openWeatherData.weather[0].description,\r\n    };\r\n\r\n    return NextResponse.json(weatherData);\r\n  } catch (error) {\r\n    console.error('Ошибка при получении данных о погоде:', error);\r\n\r\n    const mockWeatherData: WeatherData = {\r\n      temperature: {\r\n        air: { C: 15, F: 59 },\r\n        comfort: { C: 13, F: 55 },\r\n      },\r\n      humidity: 65,\r\n      precipitation: {\r\n        type: 'none',\r\n        intensity: 0,\r\n      },\r\n      wind: {\r\n        speed: 3.5,\r\n        direction: 'северо-западный',\r\n      },\r\n      pressure: {\r\n        mm: 750,\r\n        hpa: 1000,\r\n      },\r\n      uv_index: 3,\r\n      phenomena: {\r\n        fog: false,\r\n        thunder: false,\r\n        cloudy: 50,\r\n      },\r\n      description: 'Ошибка получения данных, используется резервный прогноз',\r\n    };\r\n\r\n    return NextResponse.json(mockWeatherData);\r\n  }\r\n}\r\n\r\n// Вспомогательные функции\r\n\r\nfunction getPrecipitationType(weatherId: number): 'rain' | 'snow' | 'drizzle' | 'none' {\r\n  if (weatherId >= 300 && weatherId < 400) return 'drizzle';\r\n  if (weatherId >= 500 && weatherId < 600) return 'rain';\r\n  if (weatherId >= 600 && weatherId < 700) return 'snow';\r\n  return 'none';\r\n}\r\n\r\nfunction getPrecipitationIntensity(weatherId: number): number {\r\n  if (weatherId >= 500 && weatherId < 510) return Math.min((weatherId - 500) / 2, 3);\r\n  if (weatherId >= 600 && weatherId < 610) return Math.min((weatherId - 600) / 2, 3);\r\n  return 0;\r\n}\r\n\r\nfunction getWindDirection(degrees: number): string {\r\n  const directions = [\r\n    'северный', 'северо-восточный', 'восточный', 'юго-восточный',\r\n    'южный', 'юго-западный', 'западный', 'северо-западный'\r\n  ];\r\n  return directions[Math.round(degrees / 45) % 8];\r\n}\r\n\r\nfunction getCloudiness(cloudPercent: number): number {\r\n  return cloudPercent;\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}