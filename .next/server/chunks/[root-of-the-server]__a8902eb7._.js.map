{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/max22/WebstormProjects/Wr_git/src/lib/db/connect.ts"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI || 'mongodb+srv://weatherwear:weatherwear123@cluster0.mongodb.net/weatherwear';\r\n\r\n/**\r\n * Глобальная переменная для хранения состояния подключения к БД\r\n */\r\ndeclare global {\r\n  var mongoose: {\r\n    conn: typeof mongoose | null;\r\n    promise: Promise<typeof mongoose> | null;\r\n  };\r\n}\r\n\r\n// Инициализация глобальной переменной\r\nglobal.mongoose = global.mongoose || { conn: null, promise: null };\r\n\r\n/**\r\n * Функция для подключения к базе данных MongoDB\r\n * Использует схему синглтона для избежания лишних подключений\r\n */\r\nexport async function connectToDatabase() {\r\n  // Если уже подключились, возвращаем соединение\r\n  if (global.mongoose.conn) {\r\n    return global.mongoose.conn;\r\n  }\r\n\r\n  // Если процесс подключения уже начат, ждем его завершения\r\n  if (!global.mongoose.promise) {\r\n    const opts = {\r\n      bufferCommands: false,\r\n    };\r\n\r\n    console.log('Connecting to MongoDB...');\r\n    global.mongoose.promise = mongoose.connect(MONGODB_URI, opts)\r\n      .then((mongoose) => {\r\n        console.log('Connected to MongoDB');\r\n        return mongoose;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error connecting to MongoDB:', error);\r\n        throw error;\r\n      });\r\n  }\r\n\r\n  global.mongoose.conn = await global.mongoose.promise;\r\n  return global.mongoose.conn;\r\n}\r\n\r\nexport default connectToDatabase;\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW,IAAI;AAY/C,sCAAsC;AACtC,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI;IAAE,MAAM;IAAM,SAAS;AAAK;AAM1D,eAAe;IACpB,+CAA+C;IAC/C,IAAI,OAAO,QAAQ,CAAC,IAAI,EAAE;QACxB,OAAO,OAAO,QAAQ,CAAC,IAAI;IAC7B;IAEA,0DAA0D;IAC1D,IAAI,CAAC,OAAO,QAAQ,CAAC,OAAO,EAAE;QAC5B,MAAM,OAAO;YACX,gBAAgB;QAClB;QAEA,QAAQ,GAAG,CAAC;QACZ,OAAO,QAAQ,CAAC,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa,MACrD,IAAI,CAAC,CAAC;YACL,QAAQ,GAAG,CAAC;YACZ,OAAO;QACT,GACC,KAAK,CAAC,CAAC;YACN,QAAQ,KAAK,CAAC,gCAAgC;YAC9C,MAAM;QACR;IACJ;IAEA,OAAO,QAAQ,CAAC,IAAI,GAAG,MAAM,OAAO,QAAQ,CAAC,OAAO;IACpD,OAAO,OAAO,QAAQ,CAAC,IAAI;AAC7B;uCAEe","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/max22/WebstormProjects/Wr_git/src/lib/db/models/ClothingRecommendation.ts"],"sourcesContent":["import mongoose, { Schema } from 'mongoose';\r\n\r\n/**\r\n * Схема для рекомендаций по одежде\r\n * Включает детализированные рекомендации для различных температурных диапазонов,\r\n * типов активности и погодных условий\r\n */\r\nconst ClothingRecommendationSchema = new Schema({\r\n  // Категория температуры (freezing, cold, cool, mild, warm, hot и т.д.)\r\n  tempRange: {\r\n    type: String,\r\n    required: true,\r\n    enum: [\r\n      'extreme_freezing', // Экстремально холодно ниже -25°C\r\n      'freezing',         // Очень холодно -25°C до -10°C\r\n      'very_cold',        // Холодно -10°C до 0°C\r\n      'cold',             // Прохладно 0°C до 10°C\r\n      'cool',             // Умеренно прохладно 10°C до 15°C\r\n      'mild',             // Умеренно 15°C до 20°C\r\n      'warm',             // Тепло 20°C до 25°C\r\n      'hot',              // Жарко 25°C до 30°C\r\n      'very_hot',         // Очень жарко 30°C до 35°C\r\n      'extreme_hot',      // Экстремально жарко выше 35°C\r\n      'spring_transition', // Переходная погода весна (холодно-умеренно)\r\n      'fall_transition',   // Переходная погода осень (умеренно-холодно)\r\n      'winter_transition', // Переходная погода зима (холодно-очень холодно)\r\n      'summer_transition'  // Переходная погода лето (умеренно-жарко)\r\n    ]\r\n  },\r\n\r\n  // Минимальная и максимальная температура диапазона (в °C)\r\n  minTemp: { type: Number, required: true },\r\n  maxTemp: { type: Number, required: true },\r\n\r\n  // Тип активности (прогулка, спорт, работа, отдых)\r\n  activityType: {\r\n    type: String,\r\n    required: true,\r\n    enum: ['walk', 'sport', 'work', 'leisure']\r\n  },\r\n\r\n  // Рекомендуемая одежда\r\n  recommendations: {\r\n    // Обязательные предметы одежды\r\n    essential: [{ type: String }],\r\n\r\n    // Рекомендуемые предметы одежды\r\n    recommended: [{ type: String }],\r\n\r\n    // Дополнительные аксессуары\r\n    accessories: [{ type: String }],\r\n\r\n    // Предметы, которых следует избегать\r\n    avoid: [{ type: String }]\r\n  },\r\n\r\n  // Модификаторы для разных погодных условий\r\n  weatherModifiers: [{\r\n    // Тип погодного условия (дождь, снег, ветер и т.д.)\r\n    condition: {\r\n      type: String,\r\n      enum: [\r\n        'rain', 'light_rain', 'heavy_rain',\r\n        'snow', 'light_snow', 'heavy_snow',\r\n        'strong_wind', 'fog', 'high_humidity',\r\n        'high_uv', 'thunderstorm', 'hail',\r\n        'sleet', 'freezing_rain', 'variable'\r\n      ]\r\n    },\r\n\r\n    // Предметы одежды, которые нужно добавить при таком условии\r\n    add: [{ type: String }],\r\n\r\n    // Предметы, которых следует избегать при таком условии\r\n    avoid: [{ type: String }]\r\n  }],\r\n\r\n  // Описание сезона\r\n  season: {\r\n    type: String,\r\n    enum: ['winter', 'spring', 'summer', 'fall', 'transition']\r\n  },\r\n\r\n  // Дополнительная информация (например, советы по слоям одежды)\r\n  tips: [{ type: String }],\r\n\r\n  // Дата создания записи\r\n  createdAt: {\r\n    type: Date,\r\n    default: Date.now\r\n  },\r\n\r\n  // Дата последнего обновления\r\n  updatedAt: {\r\n    type: Date,\r\n    default: Date.now\r\n  }\r\n});\r\n\r\n// Индексы для быстрого поиска по температурному диапазону и типу активности\r\nClothingRecommendationSchema.index({ tempRange: 1, activityType: 1 });\r\n\r\n// Перед обновлением записи обновляем дату updatedAt\r\nClothingRecommendationSchema.pre('findOneAndUpdate', function() {\r\n  this.set({ updatedAt: new Date() });\r\n});\r\n\r\n// Создаем модель, если она еще не существует\r\nconst ClothingRecommendation = mongoose.models.ClothingRecommendation ||\r\n  mongoose.model('ClothingRecommendation', ClothingRecommendationSchema);\r\n\r\nexport default ClothingRecommendation;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA;;;;CAIC,GACD,MAAM,+BAA+B,IAAI,yGAAA,CAAA,SAAM,CAAC;IAC9C,uEAAuE;IACvE,WAAW;QACT,MAAM;QACN,UAAU;QACV,MAAM;YACJ;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA,oBAAqB,0CAA0C;SAChE;IACH;IAEA,0DAA0D;IAC1D,SAAS;QAAE,MAAM;QAAQ,UAAU;IAAK;IACxC,SAAS;QAAE,MAAM;QAAQ,UAAU;IAAK;IAExC,kDAAkD;IAClD,cAAc;QACZ,MAAM;QACN,UAAU;QACV,MAAM;YAAC;YAAQ;YAAS;YAAQ;SAAU;IAC5C;IAEA,uBAAuB;IACvB,iBAAiB;QACf,+BAA+B;QAC/B,WAAW;YAAC;gBAAE,MAAM;YAAO;SAAE;QAE7B,gCAAgC;QAChC,aAAa;YAAC;gBAAE,MAAM;YAAO;SAAE;QAE/B,4BAA4B;QAC5B,aAAa;YAAC;gBAAE,MAAM;YAAO;SAAE;QAE/B,qCAAqC;QACrC,OAAO;YAAC;gBAAE,MAAM;YAAO;SAAE;IAC3B;IAEA,2CAA2C;IAC3C,kBAAkB;QAAC;YACjB,oDAAoD;YACpD,WAAW;gBACT,MAAM;gBACN,MAAM;oBACJ;oBAAQ;oBAAc;oBACtB;oBAAQ;oBAAc;oBACtB;oBAAe;oBAAO;oBACtB;oBAAW;oBAAgB;oBAC3B;oBAAS;oBAAiB;iBAC3B;YACH;YAEA,4DAA4D;YAC5D,KAAK;gBAAC;oBAAE,MAAM;gBAAO;aAAE;YAEvB,uDAAuD;YACvD,OAAO;gBAAC;oBAAE,MAAM;gBAAO;aAAE;QAC3B;KAAE;IAEF,kBAAkB;IAClB,QAAQ;QACN,MAAM;QACN,MAAM;YAAC;YAAU;YAAU;YAAU;YAAQ;SAAa;IAC5D;IAEA,+DAA+D;IAC/D,MAAM;QAAC;YAAE,MAAM;QAAO;KAAE;IAExB,uBAAuB;IACvB,WAAW;QACT,MAAM;QACN,SAAS,KAAK,GAAG;IACnB;IAEA,6BAA6B;IAC7B,WAAW;QACT,MAAM;QACN,SAAS,KAAK,GAAG;IACnB;AACF;AAEA,4EAA4E;AAC5E,6BAA6B,KAAK,CAAC;IAAE,WAAW;IAAG,cAAc;AAAE;AAEnE,oDAAoD;AACpD,6BAA6B,GAAG,CAAC,oBAAoB;IACnD,IAAI,CAAC,GAAG,CAAC;QAAE,WAAW,IAAI;IAAO;AACnC;AAEA,6CAA6C;AAC7C,MAAM,yBAAyB,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,sBAAsB,IACnE,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,0BAA0B;uCAE5B","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/max22/WebstormProjects/Wr_git/src/pages/api/recommendations/%5BcityId%5D.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\r\nimport { connectToDatabase } from '@/lib/db/connect';\r\nimport ClothingRecommendation from '@/lib/db/models/ClothingRecommendation';\r\n\r\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\r\n  // Только GET запросы\r\n  if (req.method !== 'GET') {\r\n    return res.status(405).json({ message: 'Метод не разрешен' });\r\n  }\r\n\r\n  // Извлекаем параметры\r\n  const { cityId } = req.query;\r\n  const activityType = (req.query.activity_type as string) || 'walk';\r\n\r\n  if (!cityId) {\r\n    return res.status(400).json({ message: 'cityId обязателен' });\r\n  }\r\n\r\n  try {\r\n    // Подключаемся к базе данных\r\n    await connectToDatabase();\r\n\r\n    // Сначала получаем данные о погоде через прокси OpenWeather API\r\n    const weatherResponse = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/weather/current/${cityId}`);\r\n\r\n    if (!weatherResponse.ok) {\r\n      throw new Error(`Ошибка получения данных о погоде: ${weatherResponse.statusText}`);\r\n    }\r\n\r\n    const weatherData = await weatherResponse.json();\r\n\r\n    // Определяем температуру для выбора рекомендаций\r\n    const temperature = weatherData.temperature?.air?.C || 0;\r\n    const feelsLike = weatherData.temperature?.comfort?.C || temperature;\r\n\r\n    // Используем температуру \"ощущается как\" для рекомендаций\r\n    const effectiveTemp = feelsLike;\r\n\r\n    // Находим соответствующие рекомендации в базе данных\r\n    // Ищем по температурному диапазону и типу активности\r\n    let clothingRecommendation = await findRecommendationByTemperature(effectiveTemp, activityType);\r\n\r\n    // Если ничего не найдено, используем рекомендации для прогулки\r\n    if (!clothingRecommendation && activityType !== 'walk') {\r\n      clothingRecommendation = await findRecommendationByTemperature(effectiveTemp, 'walk');\r\n    }\r\n\r\n    // Если все еще ничего не найдено, возвращаем ошибку\r\n    if (!clothingRecommendation) {\r\n      return res.status(404).json({\r\n        message: 'Рекомендации не найдены для указанной температуры и типа активности'\r\n      });\r\n    }\r\n\r\n    // Обрабатываем модификаторы погоды (дождь, снег, ветер и т.д.)\r\n    const finalRecommendations = applyWeatherModifiers(\r\n      clothingRecommendation.recommendations,\r\n      clothingRecommendation.weatherModifiers || [],\r\n      weatherData\r\n    );\r\n\r\n    // Формируем ответ\r\n    const result = {\r\n      weather: weatherData,\r\n      recommendations: {\r\n        ...finalRecommendations,\r\n        temperature: {\r\n          actual: temperature,\r\n          feels_like: feelsLike,\r\n          range: clothingRecommendation.tempRange.replace(/_/g, ' ')\r\n        },\r\n        weather_conditions: getWeatherConditions(weatherData),\r\n        season: clothingRecommendation.season,\r\n        tips: clothingRecommendation.tips || []\r\n      }\r\n    };\r\n\r\n    return res.status(200).json(result);\r\n  } catch (error) {\r\n    console.error('Ошибка при получении рекомендаций:', error);\r\n    return res.status(500).json({\r\n      message: 'Ошибка при получении рекомендаций',\r\n      error: error instanceof Error ? error.message : String(error)\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Функция для поиска рекомендаций по температуре\r\n */\r\nasync function findRecommendationByTemperature(temperature: number, activityType: string) {\r\n  // Ищем рекомендации для данной температуры и типа активности\r\n  const recommendationsByTemperature = await ClothingRecommendation.find({\r\n    minTemp: { $lte: temperature },\r\n    maxTemp: { $gt: temperature },\r\n    activityType\r\n  }).exec();\r\n\r\n  // Если есть рекомендации, возвращаем первую\r\n  if (recommendationsByTemperature.length > 0) {\r\n    return recommendationsByTemperature[0];\r\n  }\r\n\r\n  // Проверяем, находимся ли мы в переходном сезоне (весна/осень)\r\n  const month = new Date().getMonth() + 1; // JavaScript месяцы начинаются с 0\r\n\r\n  // Весна (март-май)\r\n  if (month >= 3 && month <= 5) {\r\n    return ClothingRecommendation.findOne({\r\n      tempRange: 'spring_transition',\r\n      activityType\r\n    }).exec();\r\n  }\r\n\r\n  // Осень (сентябрь-ноябрь)\r\n  if (month >= 9 && month <= 11) {\r\n    return ClothingRecommendation.findOne({\r\n      tempRange: 'fall_transition',\r\n      activityType\r\n    }).exec();\r\n  }\r\n\r\n  // Если переходный сезон не определен, ищем ближайший температурный диапазон\r\n  if (temperature < -25) {\r\n    return ClothingRecommendation.findOne({\r\n      tempRange: 'extreme_freezing',\r\n      activityType\r\n    }).exec();\r\n  } else if (temperature >= 35) {\r\n    return ClothingRecommendation.findOne({\r\n      tempRange: 'extreme_hot',\r\n      activityType\r\n    }).exec();\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * Функция для применения модификаторов погоды к рекомендациям\r\n */\r\nfunction applyWeatherModifiers(\r\n  baseRecommendations: any,\r\n  weatherModifiers: any[],\r\n  weatherData: any\r\n) {\r\n  const result = {\r\n    essential: [...(baseRecommendations.essential || [])],\r\n    recommended: [...(baseRecommendations.recommended || [])],\r\n    accessories: [...(baseRecommendations.accessories || [])],\r\n    avoid: [...(baseRecommendations.avoid || [])]\r\n  };\r\n\r\n  // Получаем текущие погодные условия\r\n  const conditions = getWeatherConditions(weatherData);\r\n\r\n  // Применяем модификаторы для текущих погодных условий\r\n  for (const condition of conditions) {\r\n    const modifier = weatherModifiers.find(m => m.condition === condition);\r\n\r\n    if (modifier) {\r\n      // Добавляем элементы \"add\" в аксессуары, если их еще нет в списке\r\n      for (const item of modifier.add || []) {\r\n        if (!result.essential.includes(item) &&\r\n            !result.recommended.includes(item) &&\r\n            !result.accessories.includes(item)) {\r\n          result.accessories.push(item);\r\n        }\r\n      }\r\n\r\n      // Добавляем элементы \"avoid\" в список того, что следует избегать\r\n      for (const item of modifier.avoid || []) {\r\n        if (!result.avoid.includes(item)) {\r\n          result.avoid.push(item);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Функция для определения погодных условий\r\n */\r\nfunction getWeatherConditions(weatherData: any): string[] {\r\n  const conditions: string[] = [];\r\n\r\n  // Проверяем осадки\r\n  const precipitation = weatherData.precipitation || {};\r\n  if (precipitation.type === 'rain') {\r\n    if (precipitation.intensity > 5) {\r\n      conditions.push('heavy_rain');\r\n    } else if (precipitation.intensity > 0) {\r\n      conditions.push('light_rain');\r\n    }\r\n    conditions.push('rain');\r\n  } else if (precipitation.type === 'snow') {\r\n    if (precipitation.intensity > 5) {\r\n      conditions.push('heavy_snow');\r\n    } else if (precipitation.intensity > 0) {\r\n      conditions.push('light_snow');\r\n    }\r\n    conditions.push('snow');\r\n  }\r\n\r\n  // Проверяем ветер\r\n  const wind = weatherData.wind || {};\r\n  if (wind.speed > 8) {\r\n    conditions.push('strong_wind');\r\n  }\r\n\r\n  // Проверяем другие явления\r\n  const phenomena = weatherData.phenomena || {};\r\n  if (phenomena.fog) {\r\n    conditions.push('fog');\r\n  }\r\n  if (phenomena.thunder) {\r\n    conditions.push('thunderstorm');\r\n  }\r\n\r\n  // Проверяем влажность\r\n  if (weatherData.humidity > 80) {\r\n    conditions.push('high_humidity');\r\n  }\r\n\r\n  // Проверяем УФ-индекс\r\n  if (weatherData.uv_index > 5) {\r\n    conditions.push('high_uv');\r\n  }\r\n\r\n  // Если резкие колебания температуры в течение дня\r\n  if (weatherData.daily_temp_range && weatherData.daily_temp_range > 10) {\r\n    conditions.push('variable');\r\n  }\r\n\r\n  return conditions;\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 442, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/max22/WebstormProjects/Wr_git/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.dev.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n    }\n  } else {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1C,IAAIN,QAAQC,GAAG,CAACM,SAAS,eAAE;YACzBJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO;;QAEP;IACF,OAAO;;IAMP;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 461, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/max22/WebstormProjects/Wr_git/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 490, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/max22/WebstormProjects/Wr_git/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 523, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/max22/WebstormProjects/Wr_git/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,+IAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,+IAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}}]
}